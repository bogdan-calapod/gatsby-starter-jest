# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: node
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
test:
  # The steps that will be executed on test
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test

build:
  # The steps that will be executed on test
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
      name: npm build
      code: |
        npm install -g gatsby
        gatsby build


deploy:
  steps:
    - add-to-known_hosts:
        hostname: HOST
    - mktemp:
      envvar: PRIVATEKEY_PATH
    - create-file:
      name: write key
      filename: $PRIVATEKEY_PATH
      content: $DEPLOY_PRIVATE
      overwrite: true
      hide-from-log: true
    - script:
      name: transfer
      code: |
        scp -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -r public/* USER@HOST:DEPLOYPATH
  after-steps:
    - slack-notifier:
      url: $SLACK_HOOK
      channel: $SLACK_CHANNEL
      username: $SLACK_USERNAME
      branch: master